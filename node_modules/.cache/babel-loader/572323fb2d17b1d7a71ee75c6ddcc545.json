{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jasonchilcott/Development/code/Mod4/munch/munch-frontend/munch-frontend/src/Components/Search.js\";\nimport React from \"react\";\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: \"\",\n      searchedRestaurants: \"\"\n    };\n\n    this.searchHandler = e => {\n      console.log(e.target);\n      e.preventDefault();\n      let searchURL = 'https://developers.zomato.com/api/v2.1/search?q=&count=20&lat=40.705138&lon=-74.014096&radius=1000&sort=real_distance&order=asc';\n      fetch(searchURL, {\n        headers: {\n          Accept: \"application/json\",\n          \"User-Key\": \"7dc855cf4405df1034f62de35de0744e\"\n        }\n      }).then(resp => resp.json()).then(restaurantData => {\n        this.setState(() => ({\n          searchedRestaurants: restaurantData.restaurants\n        }));\n      });\n      this.setState({\n        searchTerm: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search\",\n        onSubmit: this.searchHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search\",\n          placeholder: \"Search cuisines, specialties, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/jasonchilcott/Development/code/Mod4/munch/munch-frontend/munch-frontend/src/Components/Search.js"],"names":["React","Search","Component","state","searchTerm","searchedRestaurants","searchHandler","e","console","log","target","preventDefault","searchURL","fetch","headers","Accept","then","resp","json","restaurantData","setState","restaurants","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,mBAAmB,EAAE;AAFjB,KADwB;;AAAA,SAOhCC,aAPgC,GAOfC,CAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAH,MAAAA,CAAC,CAACI,cAAF;AACA,UAAIC,SAAS,GAAG,iIAAhB;AACAC,MAAAA,KAAK,CAACD,SAAD,EAAY;AACTE,QAAAA,OAAO,EAAE;AACTC,UAAAA,MAAM,EAAE,kBADC;AAET,sBAAY;AAFH;AADA,OAAZ,CAAL,CAMKC,IANL,CAMUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANlB,EAOKF,IAPL,CAOUG,cAAc,IAAI;AACpB,aAAKC,QAAL,CAAc,OAAO;AACjBf,UAAAA,mBAAmB,EAAEc,cAAc,CAACE;AADnB,SAAP,CAAd;AAGH,OAXL;AAcA,WAAKD,QAAL,CAAc;AACZhB,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KA5B+B;AAAA;;AA+BhCkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACA;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAE,KAAKhB,aAAxC;AAAA,gCACI;AAAO,UAAA,IAAI,EAAE,MAAb;AAAoB,UAAA,IAAI,EAAC,QAAzB;AAAkC,UAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAQH;;AAxC+B;;AA6CpC,eAAeL,MAAf","sourcesContent":["import React from \"react\"\n\nclass Search extends React.Component{\n    state = {\n        searchTerm: \"\",\n        searchedRestaurants: \"\"\n    }\n\n  \n    searchHandler = (e) => {\n      console.log(e.target)\n      e.preventDefault()\n      let searchURL = 'https://developers.zomato.com/api/v2.1/search?q=&count=20&lat=40.705138&lon=-74.014096&radius=1000&sort=real_distance&order=asc';\n      fetch(searchURL, {\n              headers: {\n              Accept: \"application/json\",\n              \"User-Key\": \"7dc855cf4405df1034f62de35de0744e\"\n          }\n          })\n          .then(resp => resp.json())\n          .then(restaurantData => {\n              this.setState(() => ({\n                  searchedRestaurants: restaurantData.restaurants\n              }))\n          })\n      \n  \n      this.setState({\n        searchTerm: \"\"\n      })\n    }\n\n\n    render() {\n        return(\n            <>\n            <form className=\"search\" onSubmit={this.searchHandler}>\n                <input type= \"text\" name=\"search\" placeholder=\"Search cuisines, specialties, etc.\" />\n                <input type=\"submit\" value=\"Search\"/>\n            </form>\n            </>\n        )\n    }\n\n\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}