{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jasonchilcott/Development/code/Mod4/munch/munch-frontend/src/Components/Welcome.js\";\nimport React from \"react\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\n\nclass Welcome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurants: []\n    };\n\n    this.renderResults = results => {\n      this.setState(() => ({\n        restaurants: results.restaurants\n      }));\n    };\n\n    this.renderRestaurants = () => this.state.restaurants.map(restaurant => {\n      return /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant\n      }, restaurant.restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  // fetch all restaurants\n  componentDidMount() {\n    fetch(\"https://developers.zomato.com/api/v2.1/search?q=&count=20&lat=40.705138&lon=-74.014096&radius=1000&sort=real_distance&order=asc\", {\n      headers: {\n        Accept: \"application/json\",\n        \"User-Key\": \"7dc855cf4405df1034f62de35de0744e\"\n      }\n    }).then(resp => resp.json()).then(restaurantData => {\n      this.setState(() => ({\n        restaurants: restaurantData.restaurants\n      }));\n    });\n  }\n\n  render() {\n    //console.log(this.state.restaurants)\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        renderResults: this.renderResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), this.renderRestaurants()]\n    }, void 0, true);\n  }\n\n}\n\nexport default Welcome;","map":{"version":3,"sources":["/Users/jasonchilcott/Development/code/Mod4/munch/munch-frontend/src/Components/Welcome.js"],"names":["React","RestaurantCard","Header","Search","Welcome","Component","state","restaurants","renderResults","results","setState","renderRestaurants","map","restaurant","id","componentDidMount","fetch","headers","Accept","then","resp","json","restaurantData","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,WAAW,EAAE;AADT,KAFyB;;AAAA,SAsBjCC,aAtBiC,GAsBjBC,OAAO,IAAI;AACvB,WAAKC,QAAL,CAAc,OAAO;AACjBH,QAAAA,WAAW,EAAEE,OAAO,CAACF;AADJ,OAAP,CAAd;AAGH,KA1BgC;;AAAA,SA4BjCI,iBA5BiC,GA4Bb,MAAM,KAAKL,KAAL,CAAWC,WAAX,CAAuBK,GAAvB,CAA4BC,UAAD,IAAgB;AAEjE,0BAAO,QAAC,cAAD;AAA+C,QAAA,UAAU,EAAEA;AAA3D,SAAqBA,UAAU,CAACA,UAAX,CAAsBC,EAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHyB,CA5BO;AAAA;;AAMjC;AACAC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,iIAAD,EAAoI;AACrIC,MAAAA,OAAO,EAAE;AACTC,QAAAA,MAAM,EAAE,kBADC;AAET,oBAAY;AAFH;AAD4H,KAApI,CAAL,CAMCC,IAND,CAMMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANd,EAOCF,IAPD,CAOMG,cAAc,IAAI;AACpB,WAAKZ,QAAL,CAAc,OAAO;AACjBH,QAAAA,WAAW,EAAEe,cAAc,CAACf;AADX,OAAP,CAAd;AAGH,KAXD;AAYH;;AAgBDgB,EAAAA,MAAM,GAAG;AACL;AAEA,wBACI;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAI,KAAKf;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFA,EAGC,KAAKG,iBAAL,EAHD;AAAA,oBADJ;AAUH;;AAjDgC;;AAoDrC,eAAeP,OAAf","sourcesContent":["import React from \"react\"\nimport RestaurantCard from \"./RestaurantCard\"\nimport Header from \"./Header\"\nimport Search from \"./Search\"\n\nclass Welcome extends React.Component{\n\n    state = {\n        restaurants: []\n    }\n\n    // fetch all restaurants\n    componentDidMount(){\n        fetch(\"https://developers.zomato.com/api/v2.1/search?q=&count=20&lat=40.705138&lon=-74.014096&radius=1000&sort=real_distance&order=asc\", {\n            headers: {\n            Accept: \"application/json\",\n            \"User-Key\": \"7dc855cf4405df1034f62de35de0744e\"\n        }\n        })\n        .then(resp => resp.json())\n        .then(restaurantData => {\n            this.setState(() => ({\n                restaurants: restaurantData.restaurants\n            }))\n        })\n    }\n\n    renderResults = results => {\n        this.setState(() => ({\n            restaurants: results.restaurants})\n        )\n    }\n\n    renderRestaurants = () => this.state.restaurants.map((restaurant) => {\n\n        return <RestaurantCard key={restaurant.restaurant.id} restaurant={restaurant} />\n    })\n    \n\n\n\n    render() {\n        //console.log(this.state.restaurants)\n\n        return(\n            <>\n            <Header />\n            <Search renderResults = {this.renderResults}/>\n            {this.renderRestaurants()}\n            </>\n\n\n    )\n\n    }\n}\n\nexport default Welcome"]},"metadata":{},"sourceType":"module"}